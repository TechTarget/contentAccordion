/*!
contentAccordion v1.0.2 (http://okize.github.com/)
Copyright (c) 2013 | Licensed under the MIT license
http://www.opensource.org/licenses/mit-license.php
*/
(function(){(function(t){return"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)})(function(t){"use strict";var e,i,n;n="contentAccordion",i={indexOfOpenItem:0,maintainState:!1},e=function(){function e(e,s){this.element=e,this.el=t(this.element),this.options=t.extend({},i,s),this._defaults=i,this._name=n,this.items=null,this.activeItem=this.options.indexOfOpenItem,this.stateKey="accordionState",this.hashObject=null,this.init()}return e.prototype.init=function(){var e,i=this;return this.options.maintainState&&null!=this.getStateFromHash()&&this.updateState(this.activeItem),e=this.getItems(),this.activeItem>=e.length&&(this.activeItem=0),e.eq(this.activeItem).addClass("active"),e.on("click",".contentAccordionItemTitle",function(e){return e.preventDefault(),i.updateState(t(e.currentTarget).parent().index())})},e.prototype.getStateFromHash=function(){var t,e;return this.hashObject=this.getHashObject(),this.hashObject?(t=null!=(e=this.hashObject[this.stateKey])?e:null,t?this.activeItem=this.hashObject[this.stateKey]:null):null},e.prototype.getHashObject=function(){var t,e,i,n,s,h,a;if(n=this.getUrlHash(),!n)return null;for(e={},i=n.split("&"),h=0,a=i.length;a>h;h++)s=i[h],t=s.split("="),e[t[0]]=t.length>1?t[1]:void 0;return e},e.prototype.buildHashObject=function(){return t.param(this.hashObject)},e.prototype.updateHash=function(t){return t+="",this.hashObject=this.getHashObject(),this.hashObject||(this.hashObject={}),this.hashObject[this.stateKey]=t,this.setUrlHash(this.buildHashObject())},e.prototype.getUrlHash=function(){return window.location.hash?window.location.hash.substring(1):null},e.prototype.setUrlHash=function(t){return window.location.hash=t},e.prototype.getItems=function(){return this.items||(this.items=this.el.find(".contentAccordionItem")),this.items},e.prototype.selectItem=function(t){return this.options.maintainState&&this.updateHash(t),this.getItems().removeClass("active").eq(t).addClass("active")},e.prototype.updateState=function(t){return this.activeItem=t,this.selectItem(t)},e}(),t.fn[n]=function(i){return this.each(function(){t.data(this,"plugin_#{pluginName}")||t.data(this,"plugin_#{pluginName}",new e(this,i))})}})}).call(this);
/*
//@ sourceMappingURL=contentAccordion.min.js.map
*/